---
trigger:
  branches:
    include:
      - master
  paths:
    exclude:
      - README.md
      - .gitignore
      - screenshots
name: UdacityP3 Pipelines
variables:
  python.version: 3.9.1
stages:
  - stage: Provision
    jobs:
      - job: provision_azure_infrastructure
        displayName: Provision Azure Infrastructure
        pool:
          vmImage: ubuntu-latest
        steps:
          - task: DownloadSecureFile@1
            inputs:
              secureFile: .env
          - task: InstallSSHKey@0
            inputs:
              knownHostsEntry: 'known_host'
              sshPublicKey: '$(ssh_pub_key)' 
              sshKeySecureFile: 'id_rsa'
          - task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@0
            displayName: 'Install Terraform'
            inputs:
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
              terraformVersion: '0.13.5'
          
          - task: TerraformTaskV1@0
            displayName: 'terraform init'
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
              secureVarsFile: '.env'
              backendType: azurerm
              backendServiceArm: up3connection
              backendAzureRmResourceGroupName: udacityp3-storeRG
              backendAzureRmStorageAccountName: up3store
              backendAzureRmContainerName: up3blob
              backendAzureRmResourceGroupLocation: centralus
              backendAzureRmKey: 'terraform.tfstate' 
          
         
          - task: TerraformCLI@0
            displayName: 'terraform plan'
            inputs:
              command: plan
              workingDirectory: $(System.DefaultWorkingDirectory)/terraform
              environmentServiceName: 'up3connection'
              runAzLogin: true
              secureVarsFile: 'terraform.tfvars'
              allowTelemetryCollection: true
          - task: TerraformCLI@0
            displayName: 'terraform apply'
            inputs:
              command: apply
              workingDirectory: $(System.DefaultWorkingDirectory)/terraform
              environmentServiceName: 'up3connection'
              runAzLogin: true
              backendAzureRmResourceGroupName: udacityp3-storeRG
              backendAzureRmStorageAccountName: up3store
              backendAzureRmContainerName: up3blob
              backendAzureRmKey: 'terraform.tfstate'
              backendAzureRmResourceGroupLocation: centralus
              secureVarsFile: 'terraform.tfvars'              
              allowTelemetryCollection: true
        