---
trigger:
  branches:
    include:
      - master
  paths:
    exclude:
      - README.md
      - .gitignore
      - screenshots
name: UdacityP3 Pipelines
variables:
  python.version: 3.9.1
stages:
  - stage: Provision
    jobs:
      - job: provision_azure_infrastructure
        displayName: Provision Azure Infrastructure
        pool:
          vmImage: ubuntu-latest
        steps:
          - task: DownloadSecureFile@1
            inputs:
              secureFile: .env
          - task: InstallSSHKey@0
            inputs:
              knownHostsEntry: KNOWN_HOSTS_STRING
              sshPublicKey: $(GITPUBKEY)
              sshKeySecureFile: id_rsa
          - task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@0
            displayName: 'Use Terraform latest'
            inputs:
                workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'    
          - task: TerraformInstaller@0
            inputs:
              terraformVersion: latest
          - task: TerraformCLI@0
            inputs:
              command: init
              workingDirectory: $(System.DefaultWorkingDirectory)/terraform
              secureVarsFile: .env
              backendType: azurerm
              backendServiceArm: BlobStorage
              ensureBackend: true
              backendAzureRmResourceGroupName: UdacityP3-blob
              backendAzureRmResourceGroupLocation: centralus
              backendAzureRmStorageAccountName: udacitystorageacct
              backendAzureRmContainerName: udacityp3blobcontain
              backendAzureRmKey: $(BACKEND_KEY)
              allowTelemetryCollection: false
          - task: TerraformCLI@0
            inputs:
              command: validate
              workingDirectory: $(System.DefaultWorkingDirectory)/terraform
              allowTelemetryCollection: false
          - task: TerraformCLI@0
            inputs:
              command: plan
              workingDirectory: $(System.DefaultWorkingDirectory)/terraform
              environmentServiceName: Udacityp3-pipeline
              runAzLogin: true
              secureVarsFile: terraform.tfvars
          - task: TerraformCLI@0
            inputs:
              command: apply
              workingDirectory: $(System.DefaultWorkingDirectory)/terraform
              environmentServiceName: Udacityp3-pipeline
              runAzLogin: true
              secureVarsFile: terraform.tfvars
              commandOptions: '-auto-approve'
              allowTelemetryCollection: true
          - task: TerraformCLI@0
            inputs:
                  command: 'apply'
                  workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
                  environmentServiceName: 'Udacityp3-pipeline'
                  runAzLogin: true
                  secureVarsFile: terraform.tfvars
                  commandOptions: '-auto-approve'
                  allowTelemetryCollection: true